{"version":3,"sources":["Context/AppReducer.js","Context/Globalstate.js","Components/Header.js","Components/Balance.js","Components/AccountSummary.js","Components/Transaction.js","Components/TransactionHistory.js","Components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["state","action","type","transactions","filter","transaction","id","payload","intialstate","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deltransactions","addtransactions","Header","className","Balance","useContext","i","length","transactionamount","getBalance","AccountSummary","income","getIncome","expense","getExpense","Transaction","sign","onClick","description","Math","abs","TransactionHistory","console","log","map","AddTransaction","useState","setdescription","settransactionamount","onSubmit","e","preventDefault","newTransactions","random","htmlFor","placeholder","onChange","target","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d82d2971.chunk.js","sourcesContent":["export default function (state,action) {\r\n    switch(action.type){\r\n        case 'DELETE':\r\n        return{\r\n            ...state,\r\n            transactions: state.transactions\r\n                .filter(transaction => transaction.id !== action.payload)\r\n        }\r\n        case 'ADD':\r\n            return{\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { createContext, useReducer } from 'react';\r\n\r\n//import AppReducer\r\nimport AppReducer from './AppReducer';\r\n\r\n//create intialstate\r\n\r\nconst intialstate = {\r\n    transactions: []\r\n};\r\n\r\n//create global state\r\n\r\nexport const GlobalContext = createContext(intialstate);\r\n\r\n//create a provider for Global Context\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, intialstate);\r\n    function deltransactions(id){\r\n        dispatch({\r\n            type: \"DELETE\",\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addtransactions(transaction){\r\n        dispatch({\r\n            type: 'ADD',\r\n            payload: transaction\r\n        })\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={\r\n            { \r\n                transactions: state.transactions,\r\n                deltransactions,\r\n                addtransactions\r\n                }\r\n            }>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>\r\n                Expense Tracker App By Syed Shaheer\r\n            </h1>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React,{ useContext } from 'react';\r\n\r\n\r\n//import global state\r\nimport { GlobalContext } from '../Context/Globalstate';\r\n\r\n\r\nexport const Balance = () => {\r\n\r\n    const { transactions }=useContext(GlobalContext);\r\n    const getBalance = () =>{\r\n        let Balance = 0;\r\n        for(var i=0 ; i< transactions.length ; i++ ){\r\n            Balance = Balance + transactions[i].transactionamount;\r\n        }\r\n        return Balance;\r\n    }\r\n\r\n    return (\r\n        <div className=\"balance\">\r\n            <hr className=\"line\"></hr>\r\n            <h2>Current Balance</h2>\r\n            <h1>${getBalance()}</h1>\r\n            <hr className=\"line\"></hr>\r\n        </div>\r\n    );\r\n}","import React, { useContext } from 'react';\r\n\r\nimport { GlobalContext } from '../Context/Globalstate';\r\n\r\nexport const AccountSummary = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const getIncome = () => {\r\n        let income = 0;\r\n        for (var i = 0; i < transactions.length; i++) {\r\n            if (transactions[i].transactionamount < 0) {\r\n                continue;\r\n            }\r\n            income = income + transactions[i].transactionamount;\r\n        }\r\n        return income;\r\n    }\r\n\r\n    const getExpense = () => {\r\n        let expense = 0;\r\n        for (var i = 0; i < transactions.length; i++) {\r\n            if (transactions[i].transactionamount < 0) {\r\n                expense = expense + transactions[i].transactionamount;\r\n            }\r\n        }\r\n        return expense;\r\n    }\r\n\r\n    return (\r\n        <div className=\"acountsum\">\r\n            <div className=\"col-5\">\r\n                <h4>INCOME</h4>\r\n                <h4 className=\"incomee\">${getIncome()}</h4>\r\n            </div>\r\n            <div className=\"col-5\">\r\n                <h4 >EXPENSE</h4>\r\n                <h4 className=\"expensee\">${getExpense()}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useContext } from 'react';\r\n\r\nimport { GlobalContext } from '../Context/Globalstate';\r\nexport const Transaction = ({ transaction }) => {\r\n\r\n    const { deltransactions } = useContext(GlobalContext);\r\n    let sign;\r\n    let transactiontype;\r\n    if (transaction.transactionamount < 0) {\r\n        sign = '-';\r\n    }\r\n    else {\r\n        sign = '+';\r\n    }\r\n    if (transaction.transactionamount > 0) {\r\n        transactiontype = 'plus';\r\n    }\r\n    else {\r\n        transactiontype = 'minus';\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <div className=\"transs\">\r\n                <button className=\"delbtn\" onClick={() => deltransactions(transaction.id)}>X</button>\r\n                <div className=\"transac\">\r\n                    <div className=\"descript\"><h5 className=\"dhead\">{transaction.description}</h5></div>\r\n                    <div className=\"amnt\"><h5 className=\"ahead\">{sign}{Math.abs(transaction.transactionamount)}</h5></div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}","import React, { useContext } from 'react';\r\n\r\n//import Global context\r\n\r\nimport { GlobalContext } from '../Context/Globalstate';\r\n\r\n//import Transaction\r\nimport { Transaction } from './Transaction';\r\n\r\n\r\nexport const TransactionHistory = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    console.log(transactions);\r\n\r\n    return (\r\n        <div className=\"transhist\">\r\n            <h4>Transaction History</h4>\r\n            <hr className=\"line\"></hr>\r\n                <ul className=\"list\">\r\n                    {transactions.map(transaction => (\r\n                        <Transaction key={transaction.id} transaction={transaction} />\r\n                    ))}\r\n                </ul>\r\n        </div>\r\n    );\r\n\r\n}","import React, { useState, useContext } from 'react';\r\n\r\nimport { GlobalContext } from '../Context/Globalstate';\r\n\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    let [description, setdescription] = useState(\"\");\r\n    let [transactionamount, settransactionamount] = useState(0);\r\n    const {addtransactions} = useContext(GlobalContext);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newTransactions = {\r\n            id: Math.random()*10000000+1,\r\n            description,\r\n            transactionamount: +transactionamount\r\n        }\r\n\r\n        addtransactions(newTransactions);\r\n    }\r\n    return (\r\n        <div className=\"addtrans\">\r\n            <h4 className=\"addhead\">Add New Transaction</h4>\r\n            <hr className=\"line\"></hr>\r\n\r\n            <form className=\"forms\" onSubmit={onSubmit}>\r\n                <label htmlFor=\"description\"><h5>Description</h5></label>\r\n                <input\r\n                    className=\"inputer\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Description\"\r\n                    id=\"description\"\r\n                    value={description}\r\n                    onChange={(e) => setdescription(e.target.value)}\r\n                    required\r\n                ></input>\r\n                <br />\r\n                <label htmlFor=\"transactionamount\"><h5>Amount</h5></label>\r\n                <input\r\n                    className=\"inputer\"\r\n                    type=\"number\"\r\n                    id=\"transactionamount\"\r\n                    placeholder=\"Enter Amount\"\r\n                    value={transactionamount}\r\n                    onChange={(e) => settransactionamount(e.target.value)}\r\n                    required\r\n                ></input>\r\n                <br/>\r\n                <br/>\r\n                <input\r\n                    className=\"submission\"\r\n                    type=\"submit\"\r\n                    value=\"Add Transaction\"></input>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import './App.css';\nimport React from 'react';\n\n//Components\nimport { GlobalProvider } from './Context/Globalstate';\n\nimport Header from './Components/Header'\nimport { Balance } from './Components/Balance'\nimport { AccountSummary } from './Components/AccountSummary';\nimport { TransactionHistory } from './Components/TransactionHistory';\nimport { AddTransaction } from './Components/AddTransaction';\n\n\n\nfunction App() {\n  return (\n    <div className=\"main\">\n      <GlobalProvider>\n        <Header />\n        <Balance />\n        <AccountSummary />\n        <TransactionHistory />\n        <AddTransaction />\n      </GlobalProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}